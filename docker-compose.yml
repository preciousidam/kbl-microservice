version: "3.9"
   
services:
  redis:
    image: 'redis:alpine'
    ports:
      - 6380:6379
    networks: 
      - private

  db:
    image: postgres
    environment:
      - POSTGRES_DB=kblinsurance
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes: 
      - ./app/db:/app/db
    networks: 
      - private
  
  db2:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=root!!#
      - MYSQL_DATABASE=kblinsurance
    volumes: 
      - ./notifications/db:/notification/db
    networks: 
      - private
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks: 
      - private
      - public

  web:
    image: "prestone1/leave-roster"
    build: 
      context: ./app
      dockerfile: Dockerfile
    command: python manage.py runserver -h 0.0.0.0 -p 5000 -dr"
    restart: always
    ports:
      - "5000:5000"
    expose: 
      - "5000"
    env_file: ./app/.env
    volumes: 
      - ./app:/app
    networks:
      - public
      - private
    depends_on:
      - db

  celery:
    image: "prestone1/leave-notification"
    build: 
      context: ./notifications
    command: celery -A backend.celery worker --loglevel=info -E
    env_file: ./notifications/.env
    volumes: 
      - ./notifications:/notification
    networks:
      - public
      - private
    depends_on: 
      - notification
   
  scheduler:
    image: "prestone1/leave-notification"
    build: 
      context: ./notifications
    command: celery -A backend.celery beat --loglevel=info
    env_file: ./notifications/.env
    volumes: 
      - ./notifications:/notification
    networks:
      - public
      - private
    depends_on: 
      - celery

  notification:
    image: "prestone1/leave-notification"
    build:
      context: ./notifications
      dockerfile: Dockerfile
    command: python manage.py runserver -h 0.0.0.0 -p 5001 -dr"
    restart: always
    ports:
      - 5001:5001
    expose: 
      - "5001"
    env_file: ./notifications/.env
    volumes: 
      - ./notifications:/notification
    networks:
      - public
      - private
    depends_on:
      - db2
    
  email_worker:
    image: "prestone1/leave-notification"
    build: 
      context: ./notifications
    command: python consumer.py
    restart: always
    env_file: ./notifications/.env
    volumes: 
      - ./notifications:/notification
    networks:
      - public
      - private
    depends_on: 
      - notification

  proxy:
    image: proxy
    build: proxy
    restart: always
    ports:
      - 80:80
    networks: 
      - public
    volumes: 
      - ./proxy:/proxy
    depends_on: 
      - web

networks:
  public:
  private:

